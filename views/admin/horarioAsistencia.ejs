<%- include('../layouts/head.ejs') %>

  <body>
    <%- include('../layouts/sideBar.ejs') %>

      <div class="p-4 sm:ml-64">
        <div class="p-4 border-2 border-gray-200 border-dashed rounded-lg dark:border-gray-700">
          <div class="grid grid-cols-2 gap-4 mb-4">
            <div class="flex items-center justify-center rounded bg-gray-50 h-28 dark:bg-gray-800">
              <p class="text-2xl text-gray-400 dark:text-gray-500">Horario Asistencia</p>
            </div>
          </div>
          <div class="relative overflow-x-auto shadow-md sm:rounded-lg h-auto flex items-center justify-center">
              <% if (horariosPersonas.length> 0) { %>
                <table id="miTabla" class="table-fixed w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">           
                  <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                    <tr class="medium">
                      <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">Aula</th>
                      <th scope="col" class="px-6 py-3">Profesor</th>
                      <th scope="col" class="px-6 py-3">Grupo</th>
                      <th scope="col" class="px-6 py-3">Horario Inicio</th>
                      <th scope="col" class="px-6 py-3">Horario Fin</th>
                      <th scope="col" class="px-6 py-3">Estado-Asistencia</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% horariosPersonas.forEach(horarioPersona=> { %>
                      <tr class="bg-white dark:bg-gray-800 items-center">
                        <td class="bg-warning px-6 py-4">
                          <%= horarioPersona.id_horario.aula.name %>
                        </td>
                        <td class="<%= horarioPersona.id_horario %> px-6 py-4"><%= horarioPersona.id_persona.name %>
                        </td>
                        <td class="<%= horarioPersona.id_horario %> px-6 py-4">
                          <%= horarioPersona.id_grupo.name %>
                        </td>
                        <td class="<%= horarioPersona.id_horario %> px-6 py-4">
                          <%= horarioPersona.id_horario.hora_inicio.toLocaleTimeString('es-PE', { hour: '2-digit' ,
                            minute: '2-digit' }) %>
                        </td>
                        <td class="<%= horarioPersona.id_horario %> px-6 py-4">
                          <%= horarioPersona.id_horario.hora_fin.toLocaleTimeString('es-PE', { hour: '2-digit' ,
                            minute: '2-digit' }) %>
                        </td>
                        <% let color; switch (horarioPersona.asistencia) { case 'A' : color='bg-blue-500' ; break; case 'T'
                          : color='bg-yellow-500' ; break; case 'F' : color='bg-red-500' ; break; default: color='bg-gray-500' ;
                          } %>
                          <td data-id="<%= horarioPersona._id %>" class="<%= color %> text-black">
                            <%= horarioPersona.asistencia %>
                          </td>

                      </tr>
                      <% }); %>
                  </tbody>
                </table>
            </div>
            <% } else { %>
              <p>No hay horarios de personas disponibles.</p>
              <% } %>
          </div>
          <%- include('../layouts/footer.ejs') %>
        </div>
      </div>
    </div>

    <script src="/js/web/aulas.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io.connect();
      socket.on("asistenciaCambiada", (data) => {
        console.log("Asistencia cambiada:", data);

        actualizarCampoDeAsistencia(
          data.idHorarioPersona,
          data.nuevaAsistencia
        );
      });
      let tiempoRestante = 60;
      function actualizarTabla() {

        fetch(`/api/web/horarioAsistencia`)
          .then((response) => response.json())
          .then((data) => {
            console.log(data);
            const tabla = document.getElementById("miTabla");
            const tbody = tabla.querySelector("tbody");
            tbody.innerHTML = "";
            data.forEach((horarioPersona) => {
              const row = document.createElement("tr");
              let color;

              switch (horarioPersona.asistencia) {
                case "A":
                  color = "bg-info";
                  break;
                case "T":
                  color = "bg-warning";
                  break;
                case "F":
                  color = "bg-danger";
                  break;
                default:
                  color = "bg-gray";
              }
              row.innerHTML = `
                          <td>${horarioPersona.id_horario.dia.toLocaleString()}</td>
                          <td>${horarioPersona.id_grupo.name}</td>
                          <td>${horarioPersona.id_curso.name}</td>
                          <td>${horarioPersona.id_persona.name}</td>
                          <td data-id="${horarioPersona._id
                }" class="${color}">
                            ${horarioPersona.asistencia}
                          </td>
                          <td>${horarioPersona.estado}</td>
                          <td>${horarioPersona.contrasena}</td>
                      `;

              tbody.appendChild(row);
            });
          })
          .catch((error) =>
            console.error("Error al cargar detalles de aula:", error)
          );
      }
      function actualizarCampoDeAsistencia(idHorarioPersona, nuevaAsistencia) {
        const celdaAsistencia = document.querySelector(
          `td[data-id="${idHorarioPersona}"] `
        );

        if (celdaAsistencia) {
          celdaAsistencia.textContent = nuevaAsistencia;
          let nuevoColor;
          switch (nuevaAsistencia) {
            case "A":
              nuevoColor = "bg-info";
              break;
            case "T":
              nuevoColor = "bg-warning";
              break;
            case "F":
              nuevoColor = "bg-danger";
              break;
            default:
              nuevoColor = "bg-gray";
          }
          celdaAsistencia.className = nuevoColor;
        }
      }
      function actualizarCampoAsistencia() {
        console.log("Campo de asistencia actualizado");
        socket.emit("campoAsistenciaActualizado", "asf");
      }
      setInterval(actualizarTabla, 1000 * 60 * 5);
    </script>
  </body>