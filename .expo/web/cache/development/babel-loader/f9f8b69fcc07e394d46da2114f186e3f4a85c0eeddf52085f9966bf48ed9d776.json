{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar authService = {\n  login: function () {\n    var _login = _asyncToGenerator(function* (email, password) {\n      try {\n        var response = yield fetch('http://localhost:3000/auth/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        });\n        var data = yield response.json();\n        return data.token;\n      } catch (error) {\n        throw new Error('Error al iniciar sesión');\n      }\n    });\n    function login(_x, _x2) {\n      return _login.apply(this, arguments);\n    }\n    return login;\n  }(),\n  register: function () {\n    var _register = _asyncToGenerator(function* (email, password) {\n      try {\n        var response = yield fetch('http://localhost:3000/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        });\n        var data = yield response.json();\n        return data;\n      } catch (error) {\n        throw new Error('Error al registrar');\n      }\n    });\n    function register(_x3, _x4) {\n      return _register.apply(this, arguments);\n    }\n    return register;\n  }()\n};\nexport default authService;","map":{"version":3,"names":["authService","login","_login","_asyncToGenerator","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","token","error","Error","_x","_x2","apply","arguments","register","_register","_x3","_x4"],"sources":["C:/Users/Usuario/Downloads/apiQR-version_1/apiQR-version_1/services/authService.js"],"sourcesContent":["const authService = {\r\n    async login(email, password) {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/auth/register', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n        const data = await response.json();\r\n        return data.token; // Suponiendo que el servidor devuelve un token al iniciar sesión\r\n      } catch (error) {\r\n        throw new Error('Error al iniciar sesión');\r\n      }\r\n    },\r\n  \r\n    async register(email, password) {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/register', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n        const data = await response.json();\r\n        return data; // Puede ser un mensaje de éxito o información adicional\r\n      } catch (error) {\r\n        throw new Error('Error al registrar');\r\n      }\r\n    },\r\n  };\r\n  \r\n  export default authService;\r\n  "],"mappings":";AAAA,IAAMA,WAAW,GAAG;EACVC,KAAK;IAAA,IAAAC,MAAA,GAAAC,iBAAA,YAACC,KAAK,EAAEC,QAAQ,EAAE;MAC3B,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,qCAAqC,EAAE;UAClEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAER,KAAK,EAALA,KAAK;YAAEC,QAAQ,EAARA;UAAS,CAAC;QAC1C,CAAC,CAAC;QACF,IAAMQ,IAAI,SAASP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC,OAAOD,IAAI,CAACE,KAAK;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACF,CAAC;IAAA,SAAAhB,MAAAiB,EAAA,EAAAC,GAAA;MAAA,OAAAjB,MAAA,CAAAkB,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAApB,KAAA;EAAA;EAEKqB,QAAQ;IAAA,IAAAC,SAAA,GAAApB,iBAAA,YAACC,KAAK,EAAEC,QAAQ,EAAE;MAC9B,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,gCAAgC,EAAE;UAC7DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAER,KAAK,EAALA,KAAK;YAAEC,QAAQ,EAARA;UAAS,CAAC;QAC1C,CAAC,CAAC;QACF,IAAMQ,IAAI,SAASP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC,OAAOD,IAAI;MACb,CAAC,CAAC,OAAOG,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;IACF,CAAC;IAAA,SAAAK,SAAAE,GAAA,EAAAC,GAAA;MAAA,OAAAF,SAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,QAAA;EAAA;AACH,CAAC;AAED,eAAetB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}