{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nvar API = \"http://localhost:3000\";\nexport var inicioSesion = function () {\n  var _ref = _asyncToGenerator(function* (datos) {\n    console.log(\"entro a inicios de sesion\");\n    console.log({\n      datos: datos\n    });\n    var datos2 = {\n      email: 'ce',\n      password: '1212'\n    };\n    var apiUrl = `http://localhost:3000/api/movil/inicioSesion`;\n    var response = yield axios.post(apiUrl, datos);\n    console.log(response);\n    console.log(\"se logeo correctamente :\" + response.data._id);\n  });\n  return function inicioSesion(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getTasks = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    var res = yield fetch(API, {\n      method: \"GET\"\n    });\n    return yield res.json();\n  });\n  return function getTasks() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var saveTask = function () {\n  var _ref3 = _asyncToGenerator(function* (newTask) {\n    var res = yield fetch(API, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTask)\n    });\n    return yield res.json();\n  });\n  return function saveTask(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getTask = function () {\n  var _ref4 = _asyncToGenerator(function* (taskId) {\n    var res = yield fetch(`${API}/${taskId}`);\n    return yield res.json();\n  });\n  return function getTask(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var updateTask = function () {\n  var _ref5 = _asyncToGenerator(function* (taskId, newTask) {\n    console.log(taskId, newTask);\n    var res = yield fetch(`${API}/${taskId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTask)\n    });\n    return res;\n  });\n  return function updateTask(_x4, _x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","API","inicioSesion","_ref","_asyncToGenerator","datos","console","log","datos2","email","password","apiUrl","response","post","data","_id","_x","apply","arguments","getTasks","_ref2","res","fetch","method","json","saveTask","_ref3","newTask","headers","Accept","body","JSON","stringify","_x2","getTask","_ref4","taskId","_x3","updateTask","_ref5","_x4","_x5"],"sources":["D:/5 CICLO-II/movil/apiQR/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = \"http://localhost:3000\" ; /* coloca el \" /\" */\r\n\r\nexport const inicioSesion = async (datos) => {\r\n  console.log(\"entro a inicios de sesion\" )\r\n  console.log({datos})\r\n  const datos2 = {\r\n    email: 'ce',\r\n    password: '1212',\r\n  };\r\n  const apiUrl= `http://localhost:3000/api/movil/inicioSesion`;\r\n  const response =  await axios.post(apiUrl , datos)\r\n  console.log(response)\r\n  console.log(\"se logeo correctamente :\"  + response.data._id)\r\n \r\n};\r\n\r\nexport const getTasks = async () => {\r\n  const res = await fetch(API, {\r\n    method: \"GET\",\r\n  });\r\n\r\n  return await res.json();\r\n};\r\n\r\nexport const saveTask = async (newTask) => {\r\n  const res = await fetch(API, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(newTask),\r\n  });\r\n  return await res.json();\r\n};\r\n\r\nexport const getTask = async (taskId) => {\r\n  const res = await fetch(`${API}/${taskId}`);\r\n  return await res.json();\r\n};\r\n\r\nexport const updateTask = async (taskId, newTask) => {\r\n  console.log(taskId, newTask)\r\n  const res = await fetch(`${API}/${taskId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(newTask),\r\n  });\r\n  return res;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}