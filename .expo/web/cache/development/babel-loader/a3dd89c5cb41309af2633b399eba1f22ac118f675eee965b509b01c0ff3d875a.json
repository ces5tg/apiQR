{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar userService = {\n  apiUrl: 'http://localhost:3000/api/users',\n  login: function () {\n    var _login = _asyncToGenerator(function* (username, password) {\n      try {\n        var response = yield fetch(`${userService.apiUrl}/login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username,\n            password: password\n          })\n        });\n        var data = yield response.json();\n        localStorage.setItem('authToken', data.token);\n        return data.token;\n      } catch (error) {\n        throw new Error('Error al iniciar sesión');\n      }\n    });\n    function login(_x, _x2) {\n      return _login.apply(this, arguments);\n    }\n    return login;\n  }(),\n  register: function () {\n    var _register = _asyncToGenerator(function* (username, password) {\n      try {\n        console.log('Registrando usuario:', username);\n        var response = yield fetch(`${user.apiUrl}/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username,\n            password: password\n          })\n        });\n        var data = yield response.json();\n        console.log('Respuesta del servidor:', data);\n        return data;\n      } catch (error) {\n        throw new Error('Error al registrar');\n      }\n    });\n    function register(_x3, _x4) {\n      return _register.apply(this, arguments);\n    }\n    return register;\n  }(),\n  logout: function logout() {\n    localStorage.removeItem('authToken');\n  },\n  isLoggedIn: function isLoggedIn() {\n    return !!localStorage.getItem('authToken');\n  }\n};\nexport default userService;","map":{"version":3,"names":["userService","apiUrl","login","_login","_asyncToGenerator","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","localStorage","setItem","token","error","Error","_x","_x2","apply","arguments","register","_register","console","log","user","_x3","_x4","logout","removeItem","isLoggedIn","getItem"],"sources":["C:/Users/Usuario/Downloads/apiQR-version_1/apiQR-version_1/services/authService.js"],"sourcesContent":["const userService = {\r\n  apiUrl: 'http://localhost:3000/api/users',\r\n\r\n  login: async (username, password) => {\r\n    try {\r\n      const response = await fetch(`${userService.apiUrl}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      const data = await response.json();\r\n      localStorage.setItem('authToken', data.token);\r\n      // Aquí podrías usar un sistema de notificaciones o mensajes para mostrar que el inicio de sesión fue exitoso\r\n      return data.token;\r\n    } catch (error) {\r\n      throw new Error('Error al iniciar sesión');\r\n    }\r\n  },\r\n\r\n  register: async (username, password) => {\r\n    try {\r\n        console.log('Registrando usuario:', username);\r\n        // Realiza la solicitud al servidor para registrar el usuario y guarda la respuesta\r\n        const response = await fetch(`${user.apiUrl}/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n        const data = await response.json();\r\n        console.log('Respuesta del servidor:', data);\r\n      // Aquí podrías usar un sistema de notificaciones o mensajes para mostrar que el registro fue exitoso\r\n      return data;\r\n    } catch (error) {\r\n      throw new Error('Error al registrar');\r\n    }\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('authToken');\r\n  },\r\n\r\n  isLoggedIn: () => {\r\n    return !!localStorage.getItem('authToken');\r\n  },\r\n};\r\n\r\nexport default userService;\r\n"],"mappings":";AAAA,IAAMA,WAAW,GAAG;EAClBC,MAAM,EAAE,iCAAiC;EAEzCC,KAAK;IAAA,IAAAC,MAAA,GAAAC,iBAAA,CAAE,WAAOC,QAAQ,EAAEC,QAAQ,EAAK;MACnC,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAAE,GAAER,WAAW,CAACC,MAAO,QAAO,EAAE;UAC1DQ,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAER,QAAQ,EAARA,QAAQ;YAAEC,QAAQ,EAARA;UAAS,CAAC;QAC7C,CAAC,CAAC;QACF,IAAMQ,IAAI,SAASP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,IAAI,CAACI,KAAK,CAAC;QAE7C,OAAOJ,IAAI,CAACI,KAAK;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACF,CAAC;IAAA,SAAAlB,MAAAmB,EAAA,EAAAC,GAAA;MAAA,OAAAnB,MAAA,CAAAoB,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAtB,KAAA;EAAA;EAEDuB,QAAQ;IAAA,IAAAC,SAAA,GAAAtB,iBAAA,CAAE,WAAOC,QAAQ,EAAEC,QAAQ,EAAK;MACtC,IAAI;QACAqB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEvB,QAAQ,CAAC;QAE7C,IAAME,QAAQ,SAASC,KAAK,CAAE,GAAEqB,IAAI,CAAC5B,MAAO,WAAU,EAAE;UACpDQ,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAER,QAAQ,EAARA,QAAQ;YAAEC,QAAQ,EAARA;UAAS,CAAC;QAC/C,CAAC,CAAC;QACF,IAAMQ,IAAI,SAASP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCY,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEd,IAAI,CAAC;QAE9C,OAAOA,IAAI;MACb,CAAC,CAAC,OAAOK,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;IACF,CAAC;IAAA,SAAAK,SAAAK,GAAA,EAAAC,GAAA;MAAA,OAAAL,SAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,QAAA;EAAA;EAEDO,MAAM,EAAE,SAAAA,OAAA,EAAM;IACZhB,YAAY,CAACiB,UAAU,CAAC,WAAW,CAAC;EACtC,CAAC;EAEDC,UAAU,EAAE,SAAAA,WAAA,EAAM;IAChB,OAAO,CAAC,CAAClB,YAAY,CAACmB,OAAO,CAAC,WAAW,CAAC;EAC5C;AACF,CAAC;AAED,eAAenC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}